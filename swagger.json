{
    "openapi": "3.0.1",
    "info": {
        "version": "5.0.1",
        "title": "API documentation for project Bookshelf.",
        "description": "Коктейль - напій, що отримується змішуванням кількох компонентів. Найчастіше коктейлі є або комбінацією спиртних напоїв, або безкорисною дитячою сумішшю. Коктейлі сильно різняться в різних регіонах світу, тому наш проект покликаний для публікації як оригінальних рецептів, так і власних інтерпретацій старих і відомих коктейлів.",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [{ "url": "https://bookshelf-server.onrender.com" }],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "Endpoint for requesting information about the user"
        },
        {
            "name": "Books",
            "description": "Endpoint for handling books."
        }
    ],
    "paths": {

        "/auth/signup": {
            "post": {
            "tags": ["Auth"],
            "summary": "Sign up new user - User registration",
            "parameters": [],
            "requestBody": {
                "description": "# Description of the request parameters:\n**name** - string, user name.\n**email** - string, user email.\n**password** - string, encrypted user password.",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                        "$ref": "#/components/schemas/RegistrationRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationResponse"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Bad Request",
                    "content": {}
                },
                "409": {
                    "description": "Email in use",
                    "content": {}
                }
            }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign in existing user",
                "parameters": [],
                "requestBody": {
                    "description": "# Description of the request parameters:\n**email** - string, user email.\n **password** - string, encrypted user password.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignInRequest"
                            }
                        }
                    }
                },
            "responses": {
                "200": {
                    "description": "Created session for existing user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignInResponse"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Bad request",
                    "content": {"application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Bad request"
                                    }
                                }
                            },
                            "example": {
                                "message": "Bad request"
                            }
                        }}
                },
                "401": {
                    "description": "Email or password is wrong",
                    "content": {"application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Email or password is wrong"
                                    }
                                }
                            },
                            "example": {
                                "message": "Email or password is wrong"
                            }
                        }}
                },
                "403": {
                    "description": "Forbidden",
                    "content": {"application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Forbidden"
                                    }
                                }
                            },
                            "example": {
                                "message": "Forbidden"
                            }
                        }}
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Not found"
                                    }
                                }
                            },
                            "example": {
                                "message": "Not found"
                            }
                        }
                    }
                }
            }
            }
        },
        "/auth/signout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Signs out user",
                "parameters": [],
                "description": "**Ендпоінт логауту** - це механізм виходу з системи, який припиняє дію сесії користувача та знищує токен доступу, що був виданий при попередній аутентифікації.\n**Опис:** Коли користувач натискає кнопку вийти з системи, він робить запит на URL/auth/signout з валідним токеном у заголовку Authorization. Сервер перевіряє валідність токена, якщо токен є дійсним, то сесія користувача закривається, токен видаляється і користувач повертається на сторінку входу в систему. Якщо токен не є валідним, то сервер повертає статус 401 і повідомляє про невалідність токена.",
                "security": [{ "Bearer": [] }],
                "responses": {
                "204": {
                    "description": "User signed out"
                },
                "401": {
                    "description": "Not authorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Description of the error."
                                    }
                                }
                            },
                            "example": {
                                "message": "Not authorized."
                            }
                        }
                    }
                }
            }
            }
        },

        "/users/current": {
            "get": {
                "tags": ["Users"],
                "summary": "Information about the user",
                "parameters": [],
                "description": "Information about the user",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/current/shopping_list": {
            "get": {
                "tags": ["Users"],
                "summary": "Information about shopping_list of user",
                "parameters": [],
                "description": "Information about shopping_list of user",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShoppingListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/current/shopping_list/add/{id}": {
            "post": {
                "tags": ["Users"],
                "summary": "Adding book to shopping_list of user",
                "parameters": [],
                "description": "Adding book to shopping_list of user",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShoppingListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/current/shopping_list/remove/{id}": {
            "delete": {
                "tags": ["Users"],
                "summary": "Removing a book from a user's shopping list",
                "parameters": [],
                "description": "Removing a book from a user's shopping list",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShoppingListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users/update": {
            "patch": {
                "tags": ["Users"],
                "summary": "Updating user information",
                "consumes": ["multipart/form-data", "application/json"],
                "parameters": [],
                "description": "Updating user information",
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "# Description of the request parameters:\n**name** - string, user name.",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "in": "formData",
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "file",
                                        "format": "binary"
                                    }  
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    } 
                }
            }
        },
        "/users/subscribe": {
            "post": {
                "tags": ["Users"],
                "summary": "Subscription to information mailing",
                "parameters": [],
                "description": "",
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "# Description of the request parameters:\n**email** - string, user email.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscribeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Subscribtion successful. Letters about subscribtion was sent to your email ..."
                                        }  
                                    }
                                },
                                "example": {
                                    "message": "Subscribtion successful. Letters about subscribtion was sent to your email ..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },

        "/books/top-books": {
            "get": {
                "tags": ["Books"],
                "summary": "Getting best sellers books for the main page",
                "parameters": [],
                "description": "",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsTopBooksMainpage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/categories": {
            "get": {
                "tags": ["Books"],
                "summary": "Getting all categories of books",
                "parameters": [],
                "description": "",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsBookCategories"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/category": {
            "get": {
                "tags": ["Books"],
                "summary": "Getting books of category",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsBooksOfCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "tags": ["Books"],
                "summary": "Get one book per ID",
                "parameters": [{
                    "name": "id",
                    "required": "true",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    }
                }],
                "description": "",
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsBookId"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not authorized."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Oleksandr"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "User's token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTA5MzAyM2MwNmVmNjEyNDEyNzE3ZSIsImlhdCI6MTY5NTU4NTAyNiwiZXhwIjoxNjk1NjY3ODI2fQ.Y2uXGZHuC6poRda96zbJk1SFe0HY0BOZnOvzGaOd0-o"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Username",
                                "example": "Oleksandr"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "avatarURL": {
                                "type": "string",
                                "description": "User's email",
                                "example": "http://gravatar/sdfsdf"
                            }
                        } 
                    }
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTA5MzAyM2MwNmVmNjEyNDEyNzE3ZSIsImlhdCI6MTY5NTU4NTAyNiwiZXhwIjoxNjk1NjY3ODI2fQ.Y2uXGZHuC6poRda96zbJk1SFe0HY0BOZnOvzGaOd0-o",
                    "user": { 
                        "name": "Oleksandr", 
                        "email": "1@gmail.com",  
                        "avatarURL": "http://gravatar/sdfsdf" 
                    }
                }
            },

            "SignInRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "SignInResponse": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "User's token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTA5MzAyM2MwNmVmNjEyNDEyNzE3ZSIsImlhdCI6MTY5NTU4NTAyNiwiZXhwIjoxNjk1NjY3ODI2fQ.Y2uXGZHuC6poRda96zbJk1SFe0HY0BOZnOvzGaOd0-o"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Username",
                                "example": "Oleksandr"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "avatarURL": {
                                "type": "string",
                                "description": "User's email",
                                "example": "http://gravatar/sdfsdf"
                            },
                            "shopping_list": {
                                "type": "array",
                                "description": "Array of books id ordered by user",
                                "example": "['643282b1e85766588626a07f','643282b2e85766588626a108','643282b2e85766588626a128']"
                            }
                        } 
                    }
                }
            },   

            "CurrentResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "objectId",
                        "description": "User id",
                        "example": "skfhku4424otjrelgd"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username",
                        "example": "Oleksandr"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "avatarURL": {
                        "type": "string",
                        "description": "User's avatar",
                        "example": "https://res.cloudinary.com/dxvnh0oip/image/upload/v1695434633/avatars/User_vzgcyg.png"
                    },
                    "shopping_list": {
                        "type": "array",
                        "description": "Array of books id ordered by user",
                        "example": "['643282b1e85766588626a07f','643282b2e85766588626a108','643282b2e85766588626a128']"
                    }
                },
                "example": {
                    "_id": "skfhku4424otjrelgd",
                    "name": "Oleksandr", 
                    "email": "1@gmail.com", 
                    "avatarURL": "https://res.cloudinary.com/dxvnh0oip/image/upload/v1695434633/avatars/User_vzgcyg.png",
                    "example": "['643282b1e85766588626a07f','643282b2e85766588626a108','643282b2e85766588626a128']"
                }
            },

            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Username",
                        "example": "Mykola"
                    }
                }
            },
            "UpdateUserResponse": {
                "type": "object",
                "properties": {
                    "avatarURL": {
                        "type": "string",
                        "description": "User's avatar",
                        "example": "http://gravatar/sdfsdf"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username",
                        "example": "Mykola"
                    }
                }
            },
            "SubscribeRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    }
                }
            },

            "ResponsTopBooksMainpage": {
                "type": "object",
                    "properties": {
                        "category": {
                            "type": "string"
                        },
                        "books": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "Drink id",
                                        "example": "639b6de9ff77d221f190c63b"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Book name",
                                        "example": "I'M GLAD MY MOM DIED"
                                    },
                                    "author": {
                                        "type": "string",
                                        "description": "Author of book",
                                        "example": "Jennette McCurdy"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of book",
                                        "example": "The actress and filmmaker describes her eating disorders and difficult relationship with her mother. Read by the author. 6 hours, 25 minutes unabridged."
                                    },     
                                    "book_image": {
                                        "type": "string",
                                        "description": "URL of book image",
                                        "example": "https://storage.googleapis.com/du-prd/books/images/9780593243916.jpg"
                                    },
                                    "buy_links": {
                                        "type": "array",
                                        "description": "Array links of market places",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string",
                                                    "description": "Market place id",
                                                    "example": "66b1292655987fe72c5c50e7"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Market place name",
                                                    "example": "Amazon"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Book url on market place",
                                                    "example": "https://www.amazon.com/dp/0593243919?tag=NYTBSREV-20"
                                                }
                                            }
                                        }

                                    }                                                                                                           
                                }
                            }
                        }    
                    }
            },
            "ResponsBookCategories": {
                "type": "array",
                "items": {
                    "type": "string"
                    }
            },
            "ResponsBooksOfCategory": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "books": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "Drink id",
                                        "example": "639b6de9ff77d221f190c63b"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Book name",
                                        "example": "I'M GLAD MY MOM DIED"
                                    },
                                    "author": {
                                        "type": "string",
                                        "description": "Author of book",
                                        "example": "Jennette McCurdy"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of book",
                                        "example": "The actress and filmmaker describes her eating disorders and difficult relationship with her mother. Read by the author. 6 hours, 25 minutes unabridged."
                                    },     
                                    "book_image": {
                                        "type": "string",
                                        "description": "URL of book image",
                                        "example": "https://storage.googleapis.com/du-prd/books/images/9780593243916.jpg"
                                    },
                                    "buy_links": {
                                        "type": "array",
                                        "description": "Array links of market places",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string",
                                                    "description": "Market place id",
                                                    "example": "66b1292655987fe72c5c50e7"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Market place name",
                                                    "example": "Amazon"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Book url on market place",
                                                    "example": "https://www.amazon.com/dp/0593243919?tag=NYTBSREV-20"
                                                }
                                            }
                                        }

                                    }                                                                                                           
                            }
                        }
                    }
                }
            },
            "ResponsBookId": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Drink id",
                        "example": "639b6de9ff77d221f190c63b"
                    },
                    "title": {
                        "type": "string",
                        "description": "Book name",
                        "example": "I'M GLAD MY MOM DIED"
                    },
                    "list-name": {
                        "type": "string",
                        "description": "Category of book",
                        "example": "Advice How-To and Miscellaneous"
                    },
                    "author": {
                        "type": "string",
                        "description": "Author of book",
                        "example": "Jennette McCurdy"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of book",
                        "example": "The actress and filmmaker describes her eating disorders and difficult relationship with her mother. Read by the author. 6 hours, 25 minutes unabridged."
                    },     
                    "book_image": {
                        "type": "string",
                        "description": "URL of book image",
                        "example": "https://storage.googleapis.com/du-prd/books/images/9780593243916.jpg"
                    },
                    "buy_links": {
                        "type": "array",
                        "description": "Array links of market places",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "Market place id",
                                    "example": "66b1292655987fe72c5c50e7"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Market place name",
                                    "example": "Amazon"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Book url on market place",
                                    "example": "https://www.amazon.com/dp/0593243919?tag=NYTBSREV-20"
                                }
                            }
                        }

                    }                                                                                                           
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}